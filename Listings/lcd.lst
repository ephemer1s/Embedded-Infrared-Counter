C51 COMPILER V9.56.0.0   LCD                                                               09/29/2020 20:05:01 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE LCD
OBJECT MODULE PLACED IN .\Objects\lcd.obj
COMPILER INVOKED BY: D:\keil\C51\BIN\C51.EXE lcd.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\lcd.lst)
                    - TABS(2) OBJECT(.\Objects\lcd.obj)

line level    source

   1          #include "lcd.h"
   2          #include "ir.h"
   3          #include <stdio.h>
   4          #include <string.h>
   5          #include <stdlib.h>
   6          
   7          
   8          void LcdInit() {
   9   1            LcdWriteCom(0x38);  // (16,2) display, (5,7) matrix, 8-bit databus
  10   1            LcdWriteCom(0x0c);  // display on | cursor blink & display off
  11   1            LcdWriteCom(0x06);  // upon write: addrp++ | cursor++ | scroll off
  12   1            LcdWriteCom(0x01);  // clear screen
  13   1            LcdWriteCom(0x80);  // define data pointer head
  14   1      }
  15          
  16          
  17          void Delay(uchar LCD_delay) { 
  18   1        uchar lcd_del;
  19   1        while(LCD_delay--) {
  20   2          lcd_del=100;
  21   2          while(lcd_del--);
  22   2        }
  23   1      }
  24          
  25          
  26          void LcdWriteCom(uchar com) {
  27   1        /* write command */
  28   1            LCDE = 0;    // energy clc
  29   1            LCDRS = 0;   // select send command
  30   1            LCDRW = 0;
  31   1            LCD1602_DB = com;   // write command
  32   1            Delay(100); 
  33   1            LCDE = 1;    // negedge, which make command available
  34   1            Delay(300);
  35   1            LCDE = 0;
  36   1      }
  37          
  38          
  39          void LcdWriteData(uchar dat) {
  40   1        /* write data */ 
  41   1            LCDE = 0;    // energy clc
  42   1            LCDRS = 1;   // select send data
  43   1            LCDRW = 0;
  44   1            LCD1602_DB = dat;   // write data
  45   1            Delay(100);
  46   1            LCDE = 1;   // negedge
  47   1            Delay(300);
  48   1            LCDE = 0;
  49   1      }
  50          
  51          
  52          void LCD_display(char* Lcddisplay)
  53          {
  54   1        int i;
C51 COMPILER V9.56.0.0   LCD                                                               09/29/2020 20:05:01 PAGE 2   

  55   1        uchar* p; 
  56   1        p = Lcddisplay;
  57   1        
  58   1        if(strlen(Lcddisplay)<16) { // display on 1 line
  59   2          LcdWriteCom(0x80); // data pointer head
  60   2          for(i = 0;i<strlen(Lcddisplay);i++) {
  61   3            LcdWriteData(*(p++));
  62   3          }
  63   2        }
  64   1        else { // display on 2 lines
  65   2          LcdWriteCom(0x80);
  66   2          for(i = 0;i<16;i++) {
  67   3            LcdWriteData(*(p++));
  68   3          }   
  69   2          LcdWriteCom(0xc0);  // 2nd line pointer head
  70   2          for(i = 16;i<strlen(Lcddisplay);i++) {
  71   3            LcdWriteData(*(p++));
  72   3          }
  73   2        }
  74   1      }
  75          
  76          void Press(char *time,char *curtime,char *num)
  77          {
  78   1        char *display;
  79   1        char *blank=" ";
  80   1        strcpy(display, time);
  81   1        strcpy(display, blank);
  82   1        strcpy(display, curtime);
  83   1        strcpy(display, blank);
  84   1        strcpy(display, num);
  85   1        LCD_display(display);
  86   1      }
  87          
  88          /*中断初始化*/
  89          void Int0Init()
  90          {
  91   1        EA = 1;  //总中断
  92   1        EX0 = 1;
  93   1        IT0 = 1;  //下降沿触发中断
  94   1      }
  95          
  96          void Key1() interrupt 0
  97          {
  98   1         if(key1 == 0)
  99   1         {
 100   2          LcdWriteCom(0x01);
 101   2         }
 102   1      }
 103          
 104          void Key2() interrupt 0
 105          {
 106   1         if(key2 == 0)
 107   1         {
 108   2          //display1=&cnt0;
 109   2          //LCD_display(display1);
 110   2         }
 111   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    390    ----
   CONSTANT SIZE    =      2    ----
C51 COMPILER V9.56.0.0   LCD                                                               09/29/2020 20:05:01 PAGE 3   

   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      23
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
